import sympy as sp

def linearize_expression(expression, variables, center):
    """
    Linearize a non-linear expression with multiple variables using a Taylor series expansion.

    Arguments:
    expression -- The non-linear expression to be linearized.
    variables -- The variables of the expression.
    center -- The point around which the Taylor series expansion is performed.

    Returns:
    The linearized expression.
    """
    # Convert the expression from a string to a SymPy expression
    expression = sp.sympify(expression)

    # Compute the partial derivatives of the expression with respect to each variable
    derivatives = [expression.diff(variable) for variable in variables]

    # Compute the linearized expression using the partial derivatives and the center point
    linearized_expression = expression.subs([(variable, value) for variable, value in zip(variables, center)])

    for variable, derivative in zip(variables, derivatives):
        variable_value = center[variables.index(variable)]
        linearized_expression += derivative.subs([(var, val) for var, val in zip(variables, center)]) * (variable - variable_value)

    linearized_expression = sp.simplify(linearized_expression)
    linearized_expression = evaluate_expression(linearized_expression)
    return linearized_expression
